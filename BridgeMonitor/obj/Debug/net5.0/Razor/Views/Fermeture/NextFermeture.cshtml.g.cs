#pragma checksum "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ef822d6aecf6daedfa777fa8e2ba958827e99a61"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Fermeture_NextFermeture), @"mvc.1.0.view", @"/Views/Fermeture/NextFermeture.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\_ViewImports.cshtml"
using BridgeMonitor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\_ViewImports.cshtml"
using BridgeMonitor.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ef822d6aecf6daedfa777fa8e2ba958827e99a61", @"/Views/Fermeture/NextFermeture.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f76db85423d1966422131999df760b0ec79fa9c", @"/Views/_ViewImports.cshtml")]
    public class Views_Fermeture_NextFermeture : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Boats>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
  
    ViewData["Title"] = "Prochaine Fermeture";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 7 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
  
    var next = Model[0];
    foreach (var hour in Model)
    {
        if (hour.ClosingDate > DateTime.Now)
        {
            next = hour;
            break;
        }
    }

    var duree = next.ReopeningDate - next.ClosingDate;
    var timebefore = next.ClosingDate - DateTime.Now;



#line default
#line hidden
#nullable disable
            WriteLiteral("    <style href=\"https://bootswatch.com/4/cerulean/bootstrap.css\"></style>\r\n    <h1>Prochaine fermeture :</h1>\r\n    <div class=\"card border-primary mb-3\" style=\"max-width: 20rem; margin:auto\">\r\n        <div class=\"card-header\">Cause : ");
#nullable restore
#line 25 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
                                    Write(next.BoatName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n        <div class=\"card-body\">\r\n            <h4>Du ");
#nullable restore
#line 27 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
              Write(next.ClosingDate.ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" au ");
#nullable restore
#line 27 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
                                                 Write(next.ReopeningDate.ToString("F"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</h4>\r\n            <h5>Durée : ");
#nullable restore
#line 28 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
                   Write(duree);

#line default
#line hidden
#nullable disable
            WriteLiteral(" heure(s)</h5>\r\n            <div class=\"alert alert-dismissible alert-info\" id=\"stolencountdown\"></div>\r\n");
#nullable restore
#line 30 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
             if ((7 <= next.ClosingDate.Hour & next.ClosingDate.Hour < 9) ^ (17 <= next.ClosingDate.Hour & next.ClosingDate.Hour < 19))
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h5>Risque de bouchons : Elevé</h5>\r\n");
#nullable restore
#line 33 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <h5>Risque de bouchons : Faible</h5>\r\n");
#nullable restore
#line 37 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n    </div>\r\n    <p id=\"nextclose\" style=\"display: none;\">");
#nullable restore
#line 40 "C:\Users\mat33\source\repos\BridgeMonitor\BridgeMonitor\Views\Fermeture\NextFermeture.cshtml"
                                        Write(next.ClosingDate.ToString("o"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
            WriteLiteral(@"    <script>
        var countDownDate = new Date(document.getElementById(""nextclose"").innerHTML).getTime()

        var x = setInterval(function () {
            var now = new Date().getTime();
            var distance = countDownDate - now;
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);
            document.getElementById(""stolencountdown"").innerHTML = days + "" jours "" + hours + "" heures ""
                + minutes + ""m "" + seconds + ""s"";
        }, 1000);
    </script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Boats>> Html { get; private set; }
    }
}
#pragma warning restore 1591
